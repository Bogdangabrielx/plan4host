/* app/globals.css — global styles shared by the whole app
   IMPORTANT: no landing-specific classes here. Keep homepage styles in home.module.css. */

/* ---------------- Fonts (global) ---------------- */
@font-face {
  font-family: 'Switzer';
  src: url('/fonts/Switzer/Switzer-Variable.ttf') format('truetype-variations');
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: 'Switzer';
  src: url('/fonts/Switzer/Switzer-VariableItalic.ttf') format('truetype-variations');
  font-weight: 100 900;
  font-style: italic;
  font-display: swap;
}

/* ---------------- Base reset ---------------- */
*,
*::before,
*::after { box-sizing: border-box; }

html, body { margin: 0; }

body {
  font-family: 'Switzer', ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Inter, Helvetica, Arial, sans-serif;
  background: var(--bg);
  color: var(--text);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* ✅ Dark-only ambient gradient (Safari-safe)
   - SRGB (nu OKLAB)
   - fără background-attachment: fixed (iOS Safari bug) */
:root[data-theme="dark"] body{
  background:
    radial-gradient(60rem 60rem at 10% 0%,
      color-mix(in srgb, #22d3ee 22%, transparent),
      transparent 60%),
    radial-gradient(50rem 50rem at 95% 10%,
      color-mix(in srgb, #0d1323 22%, transparent),
      transparent 60%),
    radial-gradient(70rem 60rem at 30% 100%,
      color-mix(in srgb, var(--primary) 14%, transparent),
      transparent 60%),
    var(--bg);
}

/* Focus (global fallback) */
a:focus-visible,
button:focus-visible,
[role="button"]:focus-visible,
input:focus-visible,
select:focus-visible,
textarea:focus-visible {
  outline: 2px solid color-mix(in srgb, var(--primary) 80%, white);
  outline-offset: 2px;
  border-radius: 8px;
}

/* ---------------- Supabase-style UI primitives (for the app) ---------------- */
/* Card / Panel */
.sb-card {
  background: var(--panel);
  border: 0;
  border-radius: 12px;
  box-shadow: 0 4px 16px rgba(0,0,0,0.10);
}

/* Toolbar container */
.sb-toolbar {
  display: flex;
  align-items: center;
  gap: 14px;
  flex-wrap: wrap;
  padding: 6px 2px;
  background: transparent;
  border: 0;
  border-radius: 0;
}

/* Buttons */
.sb-btn {
  -webkit-appearance: none;
  appearance: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  padding: 8px 12px;
  border-radius: 999px;
  border: 0;
  background: color-mix(in srgb, var(--card) 88%, transparent);
  color: var(--text);
  font-weight: 800;
  cursor: pointer;
  transition: background-color .15s ease, border-color .15s ease, transform .05s ease;
}
.sb-btn:active { transform: scale(0.99); }
.sb-btn--primary {
  border: 0;
  background: var(--primary);
  color: #0c111b;
}
.sb-btn--ghost { background: transparent; }
.sb-btn--icon { width: 36px; height: 36px; padding: 0; border-radius: 999px; }
.sb-btn--small { padding: 6px 10px; border-radius: 8px; }

/* ====== SELECT: Safari = nativ (appearance:auto) ====== */
:root[data-browser="safari"] select:not([multiple]):not([size]),
:root[data-browser="safari"] select.sb-select:not([multiple]):not([size]) {
  -webkit-appearance: menulist !important;
          appearance: auto !important;
  /* anulăm eventualele inline styles ca să nu stricăm nativul */
  background: initial !important;
  border: 0 !important;
  padding: 6px 8px !important;
  border-radius: 10px !important;
  font: inherit;
  font-weight: 700;
  color: var(--text);
}

/* ====== SELECT: Chrome/alte browsere = custom 3D fără săgeți ====== */
:root:not([data-browser="safari"]) select:not([multiple]):not([size]),
:root:not([data-browser="safari"]) select.sb-select:not([multiple]):not([size]) {
  -webkit-appearance: none;
          appearance: none;

  /* metrici */
  font: inherit;
  font-weight: 700;
  line-height: 1.2;
  color: var(--text);
  min-height: 36px;
  padding: 8px 12px;             /* fără spațiu de icon: nu avem săgeți */
  border-radius: 10px;

  /* paleta pentru efect 3D */
  --sel-top:   #56606d;
  --sel-bot:   #1a1f26;
  --sel-edge:  #0b0f14;
  --sel-hi:    rgba(255,255,255,.28);
  --sel-hi2:   rgba(255,255,255,.10);
  --sel-low:   rgba(0,0,0,.38);
  --sel-deep:  rgba(0,0,0,.55);

  /* contur + “pictură” a barei (trough) */
  border: 1px solid var(--sel-edge);
  background-image:
    /* luciu sus */
    linear-gradient(to bottom, var(--sel-hi), transparent 40%),
    /* umbră jos pentru concavitate */
    linear-gradient(to top, var(--sel-low), transparent 55%),
    /* stratul de bază */
    linear-gradient(to bottom, var(--sel-top), var(--sel-bot));
  background-repeat: no-repeat;
  background-size: 100% 35%, 100% 70%, 100% 100%;
  background-position: 0 0, 0 100%, 0 0;

  box-shadow:
    inset 0 1px 0 var(--sel-hi2),
    inset 0 -1px 0 var(--sel-deep),
    0 1px 0 rgba(255,255,255,.05);
  background-color: transparent;
}

:root:not([data-browser="safari"]) select:not([multiple]):not([size]):hover,
:root:not([data-browser="safari"]) select.sb-select:not([multiple]):not([size]):hover {
  border-color: color-mix(in srgb, var(--primary) 45%, var(--sel-edge));
}

:root:not([data-browser="safari"]) select:not([multiple]):not([size]):focus,
:root:not([data-browser="safari"]) select.sb-select:not([multiple]):not([size]):focus {
  outline: 2px solid color-mix(in srgb, var(--primary) 70%, white);
  outline-offset: 2px;
}

/* ieșire curată pe disabled */
select:disabled { opacity: .7; cursor: not-allowed; }
/* Segmented control */
.sb-seg {
  display: inline-flex;
  background: var(--card);
  border: 1px solid color-mix(in srgb, var(--border) 50%, transparent);
  border-radius: 12px;
  padding: 2px;
}
.sb-seg > button {
  border: 0;
  background: transparent;
  color: var(--text);
  font-weight: 800;
  padding: 6px 10px;
  border-radius: 8px;
  cursor: pointer;
}
.sb-seg > button[data-active="true"] {
  background: var(--primary);
  color: #0c111b;
}

/* Badge */
.sb-badge {
  display: inline-flex;
  align-items: center;
  padding: 4px 8px;
  border-radius: 999px;
  border: 1px solid color-mix(in srgb, var(--border) 50%, transparent);
  background: var(--card);
  color: var(--muted);
  font-size: 12px;
  font-weight: 800;
}

/* Tiny popover */
.sb-popover {
  background: var(--panel);
  border: 1px solid color-mix(in srgb, var(--border) 55%, transparent);
  border-radius: 12px;
  padding: 10px;
  box-shadow: 0 10px 30px rgba(0,0,0,0.25);
}

/* ---------------- Grid helpers used in the app ---------------- */
.config-grid { display: grid; grid-template-columns: 1fr; gap: 16px; align-items: start; }
@media (min-width: 1025px) { .config-grid { grid-template-columns: 280px 1fr; } }

.room-row { display: grid; gap: 10px; grid-template-columns: 1fr auto; grid-template-areas: "name name" "type actions"; align-items: center; }
@media (max-width: 480px) { .room-row { grid-template-columns: 1fr; grid-template-areas: "name" "type" "actions"; } }

.rd-row { display: grid; grid-template-columns: 1fr 160px 90px 90px; gap: 8px; align-items: center; }
@media (max-width: 480px) { .rd-row { grid-template-columns: 1fr; } }

/* ---------------- Utilities ---------------- */
.break-anywhere { overflow-wrap: anywhere; word-break: break-word; }

.sr-only {
  position: absolute !important;
  width: 1px; height: 1px;
  padding: 0; margin: -1px; overflow: hidden;
  clip: rect(0, 0, 0, 0); white-space: nowrap; border: 0;
}





/* ──────────────────────────────────────────────────────────
   .modalCard — animated gradient ring (global)
   Replică .featureCard: hover/focus border ring + fallback
   ────────────────────────────────────────────────────────── */

/* Angle animabil pentru conic-gradient (unde e suportat) */
@property --modal-ring-angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

.modalCard{
  /* fallback-uri locale în caz că nu există variabilele temei */
  --modal-card:   var(--card, rgba(12,19,35,.9));
  --modal-border: var(--border, rgba(148,163,184,.18));
  --modal-prim:   var(--primary, #3ECF8E);
  --modal-acc1:   var(--accent1, #22d3ee);
  --modal-acc2:   var(--accent2, rgba(12, 19, 35, 0.9));
  --modal-ring:   var(--ring, 2px);
  --modal-speed:  var(--ring-speed, 2.6s);

  position: relative;
  background: var(--modal-card);
  border: 1px solid var(--modal-border);
  border-radius: 22px;
  padding: 24px;
  transition: box-shadow .15s ease, transform .15s ease, border-color .15s ease;
  will-change: transform;
}
.modalCard > *{ position: relative; z-index: 2; }

.modalCard:hover{
  transform: translateY(-2px);
  /* box-shadow: 0 12px 28px color-mix(in srgb, var(--modal-prim) 45%, transparent); */
}

/* Ineaua animată pe margine (tehnica cu mask) */
.modalCard::before{
  content:"";
  position: absolute;
  inset: 0;
  padding: var(--modal-ring);
  border-radius: inherit;
  background: conic-gradient(
    from var(--modal-ring-angle),
    color-mix(in srgb, var(--bg) 75%, transparent) 0%,
    color-mix(in srgb, var(--bg) 75%, transparent) 25%,
    color-mix(in srgb, var(--modal-prim) 75%, transparent) 50%,
    color-mix(in srgb, var(--bg) 75%, transparent) 75%,
    color-mix(in srgb, var(--bg) 75%, transparent) 100%
  );
  /* arată doar “inelul” (borderul), nu umplutura */
  -webkit-mask:
    linear-gradient(#000 0 0) content-box,
    linear-gradient(#000 0 0);
          mask:
    linear-gradient(#000 0 0) content-box,
    linear-gradient(#000 0 0);
  -webkit-mask-composite: xor;
          mask-composite: exclude;

  pointer-events: none;
  z-index: 1;
  opacity: 0;                                /* ascuns by default */
  animation: modal-ring-spin var(--modal-speed) linear infinite paused;
}

/* Rulează animația la hover/focus (și când containerul are focus înăuntru) */
.modalCard:is(:hover, :focus-within)::before{
  opacity: 1;
  animation-play-state: running;
}

@keyframes modal-ring-spin { to { --modal-ring-angle: 360deg; } }

/* ✅ Trigger manual (mobil sau când vrei să forțezi efectul) */
.modalCard[data-animate="true"]::before{
  opacity: 1;
  animation-play-state: running;
}

/* Fallback pentru browsere fără mask-composite */
@supports not (mask-composite: exclude){
  .modalCard::before{
    inset: calc(-1 * var(--modal-ring));     /* desenează în afara cardului pentru a simula borderul */
    padding: 0;
    -webkit-mask: none;
            mask: none;
    z-index: 0;
    animation: modal-ring-rotate var(--modal-speed) linear infinite paused;
  }
  .modalCard:is(:hover, :focus-within)::before,
  .modalCard[data-animate="true"]::before{
    animation-play-state: running;
    opacity: 1;
  }
  /* “Capac” interior ca să lase un inel subțire vizibil */
  .modalCard::after{
    content:"";
    position:absolute;
    inset: var(--modal-ring);
    border-radius: inherit;
    background: var(--modal-card);
    z-index: 1;
    pointer-events: none;
  }
  @keyframes modal-ring-rotate { to { transform: rotate(360deg); } }
}


