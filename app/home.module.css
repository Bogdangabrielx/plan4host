/* app/home.module.css — isolated styles for landing homepage */

.landing { background: var(--bg); color: var(--text); position: relative; }
.landing {
  /* Dark-only scoped palette for landing */
  --bg: #0b1020; /* deep blue-black */
  --text: #e6edf3;
  --muted: #9aa4af;
  --panel: rgba(15, 23, 42, 0.72); /* glass */
  --card: rgba(12, 19, 35, 0.9);
  --border: rgba(148, 163, 184, 0.18);
  --primary: #3ECF8E; /* Supabase green */
  --accent1: #22d3ee; /* cyan */
  --accent2: #6366f1; /* indigo */

  /* Animated ring controls (defaults) */
  --ring: 2px;           /* border thickness */
  --ring-speed: 2.6s;    /* rotation speed */
}

/* Ambient glow background */
.landing::before {
  content: "";
  position: fixed;
  inset: -20%;
  pointer-events: none;
  z-index: 0;
  background:
    radial-gradient(60rem 60rem at 10% 0%, color-mix(in oklab, var(--accent1) 22%, transparent), transparent 60%),
    radial-gradient(50rem 50rem at 95% 10%, color-mix(in oklab, var(--accent2) 22%, transparent), transparent 60%),
    radial-gradient(70rem 60rem at 30% 100%, color-mix(in oklab, var(--primary) 14%, transparent), transparent 60%);
  filter: blur(28px) saturate(120%);
  opacity: .35; /* ambient more discreet */
}
.landing * { box-sizing: border-box; }

/* Top navigation */
.nav { position: sticky; top: 0; z-index: 50; display: grid; grid-template-columns: auto 1fr auto; align-items: center; gap: 16px; padding: 14px 20px; background: color-mix(in srgb, var(--bg) 92%, transparent); backdrop-filter: blur(8px); border-bottom: 1px solid var(--border); }
.brand { display: inline-flex; align-items: center; gap: 10px; text-decoration: none; color: inherit; }
.menu { display: flex; gap: 18px; justify-content: center; }
.menuLink { color: var(--muted); text-decoration: none; font-weight: 700; }
.menuLink:hover { color: var(--text); }
.actions { display: flex; gap: 10px; }
.btn { display: inline-flex; align-items: center; justify-content: center; padding: 14px 20px; border-radius: 999px; font-weight: 800; text-decoration: none; color: var(--text); border: 1px solid var(--border); transition: transform .05s ease, box-shadow .15s ease; }
.btn:active { transform: scale(0.99); }
.btnPrimary { background: var(--card); color: #ffffff; border-color: var(--border); box-shadow: 0 8px 20px color-mix(in srgb, var(--primary) 35%, transparent); }
.btnPrimary:hover { box-shadow: 0 12px 28px color-mix(in srgb, var(--primary) 45%, transparent); }
.btnGhost { background: transparent; color: var(--text); }

/* Sparkle CTA */
.btnText { position: relative; background: var(--primary); color: #0c111b; border-color: color-mix(in oklab, var(--primary) 60%, var(--border)); box-shadow: 0 12px 28px color-mix(in oklab, var(--primary) 48%, transparent); overflow: hidden; isolation: isolate; }
.btnText::before,
.btnText::after {
  content: "";
  position: absolute;
  inset: -2px;
  pointer-events: none;
  opacity: 0;
  transition: opacity .25s ease;
}
/* More intense 4-point star sparkles (using layered linear-gradients) */
.btnText::before {
  background:
    /* star 1 */
    linear-gradient(transparent calc(50% - 1px), rgba(255,255,255,.95) calc(50% - 1px), rgba(255,255,255,.95) calc(50% + 1px), transparent calc(50% + 1px)) 12% 28%/10px 10px no-repeat,
    linear-gradient(90deg, transparent calc(50% - 1px), rgba(255,255,255,.95) calc(50% - 1px), rgba(255,255,255,.95) calc(50% + 1px), transparent calc(50% + 1px)) 12% 28%/10px 10px no-repeat,
    /* star 2 */
    linear-gradient(transparent calc(50% - 1px), rgba(255,255,255,.9) calc(50% - 1px), rgba(255,255,255,.9) calc(50% + 1px), transparent calc(50% + 1px)) 78% 22%/8px 8px no-repeat,
    linear-gradient(90deg, transparent calc(50% - 1px), rgba(255,255,255,.9) calc(50% - 1px), rgba(255,255,255,.9) calc(50% + 1px), transparent calc(50% + 1px)) 78% 22%/8px 8px no-repeat,
    /* star 3 */
    linear-gradient(transparent calc(50% - 1px), rgba(255,255,255,.95) calc(50% - 1px), rgba(255,255,255,.95) calc(50% + 1px), transparent calc(50% + 1px)) 62% 78%/9px 9px no-repeat,
    linear-gradient(90deg, transparent calc(50% - 1px), rgba(255,255,255,.95) calc(50% - 1px), rgba(255,255,255,.95) calc(50% + 1px), transparent calc(50% + 1px)) 62% 78%/9px 9px no-repeat,
    /* star 4 */
    linear-gradient(transparent calc(50% - 1px), rgba(255,255,255,.88) calc(50% - 1px), rgba(255,255,255,.88) calc(50% + 1px), transparent calc(50% + 1px)) 32% 62%/7px 7px no-repeat,
    linear-gradient(90deg, transparent calc(50% - 1px), rgba(255,255,255,.88) calc(50% - 1px), rgba(255,255,255,.88) calc(50% + 1px), transparent calc(50% + 1px)) 32% 62%/7px 7px no-repeat;
  animation: p4h-sparkle-move 1.8s linear infinite paused;
}
.btnText::after {
  /* cyan/indigo sheen */
  background: radial-gradient(40% 120% at 0% 0%, color-mix(in oklab, var(--accent1) 30%, transparent), transparent),
              radial-gradient(60% 160% at 100% 100%, color-mix(in oklab, var(--accent2) 30%, transparent), transparent);
  mix-blend-mode: screen;
}
.btnText:hover::before, .btnText:hover::after { opacity: 1; }
@keyframes p4h-sparkle-move {
  0%   { background-position: 12% 28%, 12% 28%, 78% 22%, 78% 22%, 62% 78%, 62% 78%, 32% 62%, 32% 62%; }
  50%  { background-position: 18% 24%, 18% 24%, 74% 28%, 74% 28%, 64% 72%, 64% 72%, 28% 56%, 28% 56%; }
  100% { background-position: 12% 28%, 12% 28%, 78% 22%, 78% 22%, 62% 78%, 62% 78%, 32% 62%, 32% 62%; }
}

/* Hero */
.hero { display: grid; grid-template-columns: 1.1fr 0.9fr; gap: 32px; max-width: 1100px; margin: 48px auto; padding: 0 20px; align-items: center; }
.heroText h1 { font-size: clamp(36px, 6vw, 64px); line-height: 1.05; margin: 0 0 12px; }
.heroText p { color: var(--muted); margin: 0 0 20px; max-width: 58ch; }
.accent { color: var(--primary); }
.heroCta { display: flex; gap: 12px; }
.heroVisual { background: linear-gradient(180deg, rgba(255,255,255,.04), transparent); border: 1px solid var(--border); border-radius: 18px; padding: 16px; min-height: 320px; display: grid; place-items: center; overflow: hidden; }
.heroVisual img { width: 100%; height: auto; object-fit: contain; }

/* Features */
.features { max-width: 1100px; margin: 80px auto; padding: 0 20px; }
.features h2 { font-size: clamp(28px, 5vw, 40px); margin: 0 0 20px; }
.featureGrid { display: grid; grid-template-columns: repeat(2, minmax(0, 1fr)); gap: 20px; }

/* ————————————————————————————————————————————————
   Feature Card — animated gradient border (clip technique)
   Uses conic-gradient + mask-composite: exclude (with fallback).
   ———————————————————————————————————————————————— */

/* Expose the animatable angle (modern engines) */
@property --ring-angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

.featureCard {
  background: var(--card);
  border-radius: 22px;
  padding: 26px;
  min-height: 180px;
  transition: box-shadow .15s ease, transform .15s ease;
  position: relative;
}
.featureCard > * { position: relative; z-index: 2; }
.featureCard:hover { box-shadow: 0 12px 28px color-mix(in srgb, var(--primary) 45%, transparent); transform: translateY(-2px); }

/* Animated gradient border (mask technique) */
.featureCard::before {
  content: "";
  position: absolute;
  inset: 0;
  padding: var(--ring);
  border-radius: inherit;
  background: conic-gradient(
    from var(--ring-angle),
    color-mix(in oklab, var(--accent1) 75%, transparent) 0%,
    color-mix(in oklab, var(--accent2) 75%, transparent) 25%,
    color-mix(in oklab, var(--primary) 75%, transparent) 50%,
    color-mix(in oklab, var(--accent2) 75%, transparent) 75%,
    color-mix(in oklab, var(--accent1) 75%, transparent) 100%
  );
  /* carve out the center so only the border shows */
  -webkit-mask:
    linear-gradient(#000 0 0) content-box,
    linear-gradient(#000 0 0);
  -webkit-mask-composite: xor;
          mask-composite: exclude;

  pointer-events: none;
  z-index: 1;
  opacity: 0;
  animation: ring-spin var(--ring-speed) linear infinite paused;
  will-change: transform;
}

/* Play on hover & keyboard focus */
.featureCard:is(:hover, :focus-visible)::before {
  opacity: 1;
  animation-play-state: running;
}

@keyframes ring-spin { to { --ring-angle: 360deg; } }

/* Fallback for browsers without mask-composite support */
@supports not (mask-composite: exclude) {
  .featureCard::before {
    inset: calc(-1 * var(--ring));
    padding: 0;
    -webkit-mask: none;
            mask: none;
    z-index: 0;
    animation: ring-spin-fallback var(--ring-speed) linear infinite paused;
  }
  .featureCard:is(:hover, :focus-visible)::before { animation-play-state: running; }

  /* Inner cover to reveal only a thin ring (fallback only) */
  .featureCard::after {
    content: "";
    position: absolute;
    inset: var(--ring);
    border-radius: inherit;
    background: var(--card);
    z-index: 1;
    pointer-events: none;
  }

  @keyframes ring-spin-fallback { to { transform: rotate(360deg); } }
}

.featureHead { display: flex; align-items: center; gap: 10px; margin: 0 0 8px; }
.featureIcon { width: 20px; height: 20px; object-fit: contain; opacity: .9; }
.featureCard h3 { margin: 0; font-size: 20px; }
.featureCard p { margin: 0; color: var(--muted); }

/* Pricing */
.pricing { max-width: 1100px; margin: 80px auto; padding: 0 20px; }
.pricing h2 { font-size: clamp(28px, 5vw, 40px); margin: 0 0 24px; }
.pricingGrid { display: grid; grid-template-columns: repeat(3, minmax(0, 1fr)); gap: 20px; align-items: stretch; }
.priceCard { background: var(--panel); border: 1px solid var(--border); border-radius: 16px; padding: 24px; display: flex; flex-direction: column; gap: 16px; transition: box-shadow .15s ease, transform .15s ease, border-color .15s ease; }
.priceCard:hover { transform: translateY(-3px); box-shadow: 0 16px 36px color-mix(in srgb, var(--primary) 35%, transparent); border-color: color-mix(in srgb, var(--primary) 40%, var(--border)); }
.priceImg { width: 140px; height: auto; display: block; margin: auto auto 0; object-fit: contain; border: 0; }
.priceList { list-style: none; padding: 0; margin: 0; color: var(--text); display: grid; gap: 8px; }
.priceTier { margin-top: 10px; font-weight: 900; letter-spacing: .1em; opacity: .9; text-align: center; font-size: 22px; }

/* Footer */
.footer { max-width: 1100px; margin: 60px auto; padding: 0 20px 60px; color: var(--muted); }

/* About */
.about { max-width: 1100px; margin: 80px auto; padding: 0 20px; }
.about h2 { font-size: clamp(28px, 5vw, 40px); margin: 0 0 16px; }
.about p { color: var(--muted); margin: 0 0 12px; }

/* Contact */
.contact { max-width: 1100px; margin: 80px auto; padding: 0 20px; }
.contact h2 { font-size: clamp(28px, 5vw, 40px); margin: 0 0 16px; }
.contactCard { background: var(--panel); border: 1px solid var(--border); border-radius: 18px; padding: 16px; min-height: 160px; width: min(520px, 100%); display: grid; align-content: center; }

/* Make anchored sections visible below sticky nav */
.features, .pricing, .about, .contact, .footer { scroll-margin-top: 90px; }

/* Responsive */
@media (max-width: 900px) {
  .hero { grid-template-columns: 1fr; }
  .featureGrid { grid-template-columns: 1fr; }
  .pricingGrid { grid-template-columns: 1fr; }
  .menu { display: none; }
}

/* Anchor offset for sticky header (dup safety) */
.features, .pricing, .about, .contact, .footer { scroll-margin-top: 90px; }

/* Show correct logo by theme on <html data-theme="..."> */
.logoLight { display: inline-block; }
.logoDark  { display: none; }

:global(:root[data-theme="dark"]) .logoLight { display: none; }
:global(:root[data-theme="dark"]) .logoDark  { display: inline-block; }

/* Responsive media: prevent lateral overflow (scoped to landing for CSS Modules) */
.landing :global(img),
.landing :global(video) {
  max-width: 100%;
  height: auto;
}

/* Utility: force-wrap very long words/URLs when needed */
.break-anywhere {
  overflow-wrap: anywhere;
  word-break: break-word;
}

/* Switzer variable font (self-hosted) */
@font-face {
  font-family: 'Switzer';
  src: url('/fonts/Switzer/Switzer-Variable.ttf') format('truetype-variations');
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: 'Switzer';
  src: url('/fonts/Switzer/Switzer-VariableItalic.ttf') format('truetype-variations');
  font-weight: 100 900;
  font-style: italic;
  font-display: swap;
}