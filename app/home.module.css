/* app/home.module.css — isolated styles for landing homepage */

.landing { background: var(--bg); color: var(--text); position: relative; }
.landing {
 /* Light, airy palette for landing */
  --bg: #f8fafc; /* near-white */
  --text: #0f172a; /* slate-900 */
  --muted: #64748b; /* slate-500 */
  --panel: rgba(255, 255, 255, 0.78); /* soft glass */
  --card: #ffffff; /* white cards */
  --border: #e2e8f0; /* light border */
  --primary: #16b981; /* emerald */
  --accent1: #22d3ee; /* cyan */
  --accent2: #e6eef8; /* pale indigo/blue for light ring */

  /* Animation controls */
  --ring: 2px;
  --ring-speed: 2.6s;

  /* Focus util (scoped) */
  --focus-ring: 2px;
  --focus-color: color-mix(in srgb, var(--primary) 70%, white);
}

/* Accessible skip link */
.skipLink {
  position: absolute; left: 12px; top: -40px; z-index: 100;
  background: var(--card); color: var(--text);
  padding: 8px 12px; border-radius: 10px; border: 1px solid var(--border);
  transition: top .15s ease;
}
.skipLink:focus { top: 12px; }

/* Focus util */
.focusable:focus-visible { outline: var(--focus-ring) solid var(--focus-color); outline-offset: 3px; border-radius: 10px; }

/* Ambient glow background (Safari-safe: SRGB + compositing hint) */
.landing::before {
  content: ""; position: fixed; inset: -20%; pointer-events: none; z-index: 0;
  background:
    radial-gradient(56rem 56rem at 10% -5%, color-mix(in srgb, var(--accent1) 10%, transparent), transparent 72%),
    radial-gradient(50rem 50rem at 95% 0%, color-mix(in srgb, var(--primary) 8%, transparent), transparent 70%),
    radial-gradient(64rem 54rem at 30% 100%, color-mix(in srgb, var(--accent1) 6%, transparent), transparent 68%);
  filter: blur(26px) saturate(110%);
  opacity: .24;
  will-change: transform, opacity;
  transform: translateZ(0);
}
.landing * { box-sizing: border-box; }

/* Top navigation */
.nav {
  position: sticky; top: 0; z-index: 50;
  display: grid; grid-template-columns: minmax(0,auto) 1fr auto; align-items: center;
  gap: 20px; padding: 14px 20px;
  background: color-mix(in srgb, var(--bg) 92%, transparent);
  backdrop-filter: blur(8px);
  /* Evită “ruperea” vizuală la scroll/compositing */
border-bottom: none;
box-shadow: 0 1px 0 var(--border) inset;
/* Stabilizează layer-ul pe iOS/Safari în timpul scroll-ului */
transform: translateZ(0);
will-change: transform;
 backface-visibility: hidden;
 contain: paint;
}
.brand { display: inline-flex; align-items: center; gap: 10px; text-decoration: none; color: inherit; min-width: 0; }
.brand strong { white-space: nowrap; font-weight: 800; max-width: 28ch; overflow: hidden; text-overflow: ellipsis; }
.brandWrap { display: inline-flex; align-items: center; gap: 8px; }
@media (max-width: 520px) { .brandWrap { gap: 6px; } }
.menu { display: flex; gap: 18px; justify-content: center; }
.menuLink { color: var(--muted); text-decoration: none; font-weight: 700; }
.menuLink:hover { color: var(--text); }
.actions { display: flex; gap: 10px; align-items: center; flex-wrap: nowrap; white-space: nowrap; }

/* Buttons (base) */
.btn {
  display: inline-flex; align-items: center; justify-content: center;
  padding: 14px 20px; border-radius: 999px; font-weight: 800; text-decoration: none;
  color: var(--text); border: 1px solid var(--border);
  transition: transform .05s ease, box-shadow .2s ease, border-color .2s ease, background .2s ease, color .2s ease;
  line-height: 1.1; white-space: nowrap; min-width: max-content; min-height: 44px;
}
.btn:active { transform: scale(0.99); }
.btnPrimary {
  background: var(--card); color: #ffffff; border-color: var(--border);
  box-shadow: 0 8px 20px color-mix(in srgb, var(--primary) 21%, transparent);
}
.btnPrimary:hover { box-shadow: 0 12px 28px color-mix(in srgb, var(--primary) 45%, transparent); }
.btnGhost { background: transparent; color: var(--text); }

/* Mobile nav */
.menuToggle { display: none; }
.mobileMenu { display: none; font-size: 18; padding: 10px 20px; border-top: 1px solid var(--border); background: color-mix(in srgb, var(--bg) 92%, transparent); }
.mobileLink { display: block; padding: 10px 6px; text-decoration: none; color: var(--text); font-weight: 700; border-radius: 10px; }
.mobileLink:hover { background: color-mix(in srgb, var(--card) 85%, transparent); }

@media (max-width: 900px) {
  /* Keep header fixed on phones */
  .landing { padding-top: calc(68px + var(--safe-top)); }
  .nav { position: fixed; top: var(--safe-top); left: 0; right: 0; z-index: 60; }
  .menu { display: none; }
  .menuToggle {
    display: inline-flex;
    /* Match size/shape with Sign in pill */
    padding: 14px 20px;
    border-radius: 999px;
    background: transparent;
    color: var(--text);
    border: none; /* remove outline to save space */
    box-shadow: none;
    min-height: 44px;
    font-size: 16px; /* match Sign in text size */
    font-weight: 800; /* match Sign in weight */
    letter-spacing: 0; /* match Sign in spacing (normal) */
    gap: 8px;
  }
  /* On mobile, align actions to the right (logo left) and enforce order */
  .actions { justify-content: flex-end; flex-direction: row; }
  /* Visual order (left→right within the right-aligned group):
     language → login → CTA → hamburger */
  .actions .btnLang { order: 0; }
  .actions :global(a[href="/auth/login"]) { order: 1; }
  .actions .btnChoose { order: 2; }
  .actions .menuToggle { order: 3; }
  .nav[data-open="true"] + .mobileMenu { display: block; }
}

/* Compact hamburger icon for mobile menu toggle */
.menuIcon { display: inline-block; width: 22px; height: 16px; }
.menuIcon svg { width: 22px; height: 16px; display: block; }

/* Extra small phones: keep logo visible, tighten actions */
@media (max-width: 520px) {
  .nav { gap: 12px; padding: 12px 0 12px 10px; }
  .actions { gap: 4px; }
  .nav .actions .btn { padding: 8px 10px; min-height: 32px; font-size: 12px; }
  .menuToggle { padding: 6px 8px; min-height: 32px; font-size: 12px; margin-right: calc(-1 * (var(--safe-right, 0px) + 6px)); }
  .menuIcon { width: 20px; height: 14px; }
  .menuIcon svg { width: 20px; height: 14px; }
}

/* Ultra small devices: tighten further */
@media (max-width: 380px) {
  .nav { gap: 10px; padding: 10px 0 10px 8px; }
  .actions { gap: 4px; }
  .nav .actions .btn { padding: 6px 8px; min-height: 28px; font-size: 11px; }
  .menuToggle { padding: 5px 7px; min-height: 28px; font-size: 11px; margin-right: calc(-1 * (var(--safe-right, 0px) + 8px)); }
  .menuIcon { width: 18px; height: 12px; }
  .menuIcon svg { width: 18px; height: 12px; }
}

/* Language switcher: compact, no border */
.btnLang {
  border: none;
  background: transparent;
  padding: 8px 10px;
  min-height: 36px;
  border-radius: 10px;
}
@media (max-width: 520px) {
  .btnLang { padding: 6px 8px; min-height: 32px; font-size: 13px; }
}


/* Reusable glass + glow effect for cards */
/* Usage: add class to any card container, e.g. <div class="sb-card Sb-cardglow"> */
.Sb-cardglow, .sb-cardglow{
  /* Glass controls */
  --glass-blur: 10px;
  --glass-sat: 1.25;

  position: relative;
  border: 1px solid transparent; /* drawn by 3rd background layer */
  /* layered background: hotspot, inner glass gradient, gradient border */
  background:
    radial-gradient(140% 260% at 18% 0%, color-mix(in srgb, var(--bg) 20%, transparent), transparent 64%),
    linear-gradient(180deg,
      color-mix(in srgb, var(--card) 65%, transparent),
      color-mix(in srgb, var(--card) 35%, transparent)
    ),
    linear-gradient(180deg,
      color-mix(in srgb, var(--border) 55%, transparent),
      color-mix(in srgb, var(--border) 25%, transparent)
    );
  background-clip: padding-box, padding-box, border-box;
  -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-sat));
          backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-sat));
  /* inner highlight + subtle lift + crisp outline */
  box-shadow:
    /* glossy top edge */
    0 1px 0 color-mix(in srgb, #fff 22%, var(--card)) inset,
    /* bottom inner edge */
    0 -1px 0 color-mix(in srgb, var(--border) 52%, transparent) inset,
    /* soft inner ambient glow */
    0 2px 10px color-mix(in srgb, #fff 10%, transparent) inset,
    0 0 22px color-mix(in srgb, #fff 10%, transparent) inset,
    /* crisp inner outline */
    0 0 0 1px color-mix(in srgb, var(--border) 60%, transparent) inset,
    /* subtle external shadow */
    0 8px 22px color-mix(in srgb, var(--bg) 14%, transparent);
  transition: background-color .15s ease, box-shadow .15s ease, border-color .15s ease, backdrop-filter .2s ease;
}
.Sb-cardglow:hover, .Sb-cardglow:focus-within,
.sb-cardglow:hover, .sb-cardglow:focus-within{
  background:
    radial-gradient(140% 240% at 20% 0%, color-mix(in srgb, var(--bg) 26%, transparent), transparent 66%),
    linear-gradient(180deg,
      color-mix(in srgb, var(--card) 68%, transparent),
      color-mix(in srgb, var(--card) 32%, transparent)
    ),
    linear-gradient(180deg,
      color-mix(in srgb, var(--border) 60%, transparent),
      color-mix(in srgb, var(--border) 28%, transparent)
    );
  -webkit-backdrop-filter: blur(calc(var(--glass-blur) + 1px)) saturate(1.3);
          backdrop-filter: blur(calc(var(--glass-blur) + 1px)) saturate(1.3);
  box-shadow:
    0 1px 0 color-mix(in srgb, #fff 28%, var(--card)) inset,
    0 -1px 0 color-mix(in srgb, var(--border) 54%, transparent) inset,
    0 3px 12px color-mix(in srgb, #fff 12%, transparent) inset,
    0 0 26px color-mix(in srgb, #fff 12%, transparent) inset,
    0 0 0 1px color-mix(in srgb, var(--border) 65%, transparent) inset,
    0 10px 26px color-mix(in srgb, var(--bg) 16%, transparent);
}




/* ──────────────────────────────────────────────────────────
   CTA sparkle like in the video (desktop hover) + mobile trigger
   ────────────────────────────────────────────────────────── */

/* Let conic-angle animate smoothly */
@property --sweep-angle { syntax: "<angle>"; initial-value: 0deg; inherits: false; }

/* base ghost look */
.btnText,
.btnPrimary.btnText {
  background: transparent;
  color: var(--text);
  border-color: color-mix(in srgb, var(--text) 28%, transparent);
  position: relative;
  overflow: hidden; /* Safari-safe */
}

/* subtle morphable shape */
.btnText { border-radius: 28px; }
.btnText:hover,
.btnText:focus-visible,
.btnText[data-animate="true"] { border-radius: 22px; }

/* shadow on hover/trigger */
.btnText:hover,
.btnText:focus-visible,
.btnText[data-animate="true"] {
  box-shadow:
    0 8px 24px color-mix(in srgb, var(--primary) 30%, transparent),
    0 0 0 1px color-mix(in srgb, var(--primary) 20%, transparent);
}

/* rotating border highlight */
.btnText::before{
  content:"";
  position:absolute; inset:0; border-radius: inherit; padding: 1.5px; /* thickness of “animated” border */
  background:
    conic-gradient(from var(--sweep-angle),
      transparent 0deg,
      transparent 300deg,
      color-mix(in srgb, var(--primary) 95%, white) 315deg,
      color-mix(in srgb, var(--primary) 75%, white) 330deg,
      transparent 345deg
    );
  /* show only the border, not the fill */
  -webkit-mask:
    linear-gradient(#000 0 0) content-box,
    linear-gradient(#000 0 0);
          mask:
    linear-gradient(#000 0 0) content-box,
    linear-gradient(#000 0 0);
  -webkit-mask-composite: xor;
          mask-composite: exclude;
  opacity: 0; transition: opacity .2s ease;
  pointer-events: none; z-index: 1;
}

/* 3 concave-diamond stars în colțul stânga-sus */
.btnText::after{
  content:"";
  position:absolute; top:8px; left:10px; width:44px; height:22px; pointer-events:none; opacity:0; transition: opacity .2s ease;
  --star:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Cpath fill='white' d='M50 0 Q 68 30 100 50 Q 70 68 50 100 Q 32 70 0 50 Q 30 32 50 0 Z'/%3E%3C/svg%3E");
  background:
    var(--star) 0% 50%/12px 12px no-repeat,
    var(--star) 40% 10%/9px 9px no-repeat,
    var(--star) 82% 70%/10px 10px no-repeat;
  filter:
    drop-shadow(0 0 6px rgba(255,255,255,.7))
    drop-shadow(0 0 18px color-mix(in srgb, var(--primary) 65%, transparent));
  z-index: 2;
}

/* Play the effects (desktop focus/hover) */
.btnText:hover::before,
.btnText:focus-visible::before { opacity: 1; animation: sweep-rotate 1.8s linear infinite; }
.btnText:hover::after,
.btnText:focus-visible::after  { opacity: 1; animation: stars-twinkle 1.8s ease-in-out infinite; }

/* ✅ Mobile support: rulează când TS pune [data-animate="true"] */
.btnText[data-animate="true"]::before{
  opacity:1; animation:sweep-rotate 1.8s linear infinite;
}
.btnText[data-animate="true"]::after{
  opacity:1; animation:stars-twinkle 1.8s ease-in-out infinite;
}

/* No heavy effects on touch unless explicit trigger */
@media (hover:none){
  .btnText::before, .btnText::after { display: none !important; }
  .btnText[data-animate="true"]::before,
  .btnText[data-animate="true"]::after { display: block !important; } /* override hide */
  .landing :global(a), .landing :global(button){ -webkit-tap-highlight-color: transparent; }
}

@keyframes sweep-rotate { to { --sweep-angle: 360deg; } }
@keyframes stars-twinkle {
  0%,100% {
    filter: drop-shadow(0 0 6px rgba(255,255,255,.7))
            drop-shadow(0 0 18px color-mix(in srgb, var(--primary) 65%, transparent));
    transform: translateY(0) rotate(0deg);
  }
  50% {
    filter: drop-shadow(0 0 10px rgba(255,255,255,1))
            drop-shadow(0 0 26px color-mix(in srgb, var(--primary) 75%, transparent));
    transform: translateY(-1px) rotate(6deg);
  }
}

/* ───────────────
   .btnChoose — same sparkle, NO stars
   ─────────────── */
.btnChoose,
.btnPrimary.btnChoose{
  background: transparent;
  color: var(--text);
  border-color: color-mix(in srgb, var(--text) 28%, transparent);
  position: relative;
  overflow: hidden; /* Safari-safe */
}
.btnChoose{ border-radius: 28px; }
.btnChoose:hover,
.btnChoose:focus-visible,
.btnChoose[data-animate="true"]{
  border-radius: 22px;
  box-shadow:
    0 8px 24px color-mix(in srgb, var(--primary) 30%, transparent),
    0 0 0 1px color-mix(in srgb, var(--primary) 20%, transparent);
}
.btnChoose::before{
  content:"";
  position:absolute; inset:0; border-radius: inherit; padding: 1.5px;
  background:
    conic-gradient(from var(--sweep-angle),
      transparent 0deg,
      transparent 300deg,
      rgba(25,189,99,.95) 315deg,
      rgba(25,189,99,.8) 330deg,
      transparent 345deg
    );
  /* show only the border ring */
  -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
          mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  -webkit-mask-composite: xor; 
          mask-composite: exclude;
  opacity: 0; transition: opacity .2s ease;
  pointer-events:none; z-index:1;
}
/* desktop hover/focus */
.btnChoose:hover::before,
.btnChoose:focus-visible::before{ opacity:1; animation:sweep-rotate 1.8s linear infinite; }
/* mobile trigger */
.btnChoose[data-animate="true"]::before{ opacity:1; animation:sweep-rotate 1.8s linear infinite; }
/* touch rule: hide unless explicitly triggered */
@media (hover:none){
  .btnChoose::before{ display:none !important; }
  .btnChoose[data-animate="true"]::before{ display:block !important; }
}

/* Hero */
.hero { display: grid; grid-template-columns: 1.1fr 0.9fr; gap: 32px; max-width: 1100px; margin: 48px auto; padding: 0 20px; align-items: center; }
.heroText h1 { font-size: clamp(36px, 6vw, 64px); line-height: 1.05; margin: 0 0 12px; }
.heroText p { color: var(--muted); margin: 0 0 20px; max-width: 58ch; }
.accent { color: var(--primary); }

/* Gradient text pentru "Better" (SRGB) */
.betterGrad {
  color: var(--primary);
  background: linear-gradient(90deg,
    color-mix(in srgb, var(--primary) 98%, white 72%),
    color-mix(in srgb, var(--primary) 80%, rgb(13, 80, 24) 30%)
  );
  -webkit-background-clip: text; background-clip: text;
  -webkit-text-fill-color: transparent;
}

.heroCta { display: flex; gap: 12px; }
.heroVisual { background: linear-gradient(180deg, rgba(2,6,23,.02), transparent); border: 1px solid var(--border); border-radius: 18px; padding: 16px; min-height: 320px; display: grid; place-items: center; overflow: hidden; }
.heroVisual img { width: 100%; height: auto; object-fit: contain; }

/* Features */
.features { max-width: 1100px; margin: 80px auto; padding: 0 20px; position: relative; }
.features h2 { font-size: clamp(28px, 5vw, 40px); margin: 0 0 20px; }
/* Anchor offset for sticky header: ensure titles are visible on hash navigation */
#features-title,
#pricing-title,
#about-title,
#contact-title {
  /* Ensure titles are fully visible below sticky header on anchor navigation */
  scroll-margin-top: calc(140px + var(--safe-top, 0px));
}

/* On mobile (fixed header + tighter spacing), give even more room */
@media (max-width: 900px) {
  #features-title,
  #pricing-title,
  #about-title,
  #contact-title {
    scroll-margin-top: calc(200px + var(--safe-top, 0px));
  }
}

/* Carousel */
.featureCarousel { position: relative; }
.featureViewport{
  --card-gap: 8px;                /* tighter on mobile */
  display: flex;
  align-items: center;            /* keep cards height unaffected by container height */
  justify-content: center;
  gap: var(--card-gap);
  padding: 16px 12px;             /* taller viewport without changing card size */
  overflow: hidden;               /* keep cards within viewport */
}
/* 3-up fit on mobile: compute width so that 3 cards + gaps fit the viewport */
.featureViewport .featureCard{
  /* Fit three cards + two gaps fully inside the viewport width */
  width: calc(((100% - (2 * var(--card-gap))) * 0.9) / 3);
}
/* Tablet/Desktop: restore wider padding and gaps */
@media (min-width: 641px){
  .featureViewport{ --card-gap: 12px; padding: 24px 10vw; }
}
@media (min-width: 1025px){
  .featureViewport{ --card-gap: 16px; padding: 32px 10vw; }
}

/* Mobile-only: enforce equal, compact card height and clamp text */
@media (max-width: 640px){
  .featureViewport{ padding: 24px 12px; }
  .featureViewport .featureCard{
    /* Keep desktop-like ratio on phones as well */
    aspect-ratio: 63 / 88;
    padding: 14px;               /* a touch more breathing room */
    display: grid;
    grid-template-rows: auto 1fr; /* head then text fills */
    overflow: hidden;            /* prevent text from stretching the card */
  }
  /* Mobile: icon centered above title */
  .featureHead{ display: grid; justify-items: center; align-items: start; gap: 6px; margin: 0 0 6px; }
  .featureIcon{ margin: 0 auto; }
  .featureCard h3{ text-align: center; }
  .featureCard h3{
    font-size: 14px;
    line-height: 1.2;
    display: -webkit-box;
    -webkit-line-clamp: 2;       /* allow up to 2 lines for intelligibility */
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: normal;
    overflow-wrap: break-word;
    hyphens: none;
  }
  /* Hide description in carousel on phones; details shown in modal */
  .featureCard p{ display: none; }
  /* Show only the center (active) card on phones */
  .featureCard[data-prev="true"],
  .featureCard[data-next="true"]{ display: none !important; }
  /* Leave room for nav arrows (36px each + some gap) */
  .featureCard[data-active="true"]{ width: calc(100% - 88px) !important; margin: 0 auto; }
  .carouselBtn { z-index: 10; }
}

/* PWA small screens: keep a single visible card as well */
@media (display-mode: standalone) and (max-width: 900px){
  .featureCard[data-prev="true"],
  .featureCard[data-next="true"]{ display: none !important; }
  .featureCard[data-active="true"]{ width: calc(100% - 88px) !important; margin: 0 auto; }
  .carouselBtn { z-index: 10; }
}
.featureTrack {
  --card-gap: 12px; /* mobile gap */
  display: flex;
  gap: var(--card-gap);
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  scroll-behavior: smooth;
  padding-bottom: 6px; /* space for hidden scrollbar */
  padding-left: 10vw;
  padding-right: 10vw; /* allow first/last to center with peek */
}
/* Hide legacy scrolling track when using 3-slot viewport implementation */
.featureTrack { display: none !important; }
@media (min-width: 641px){ .featureTrack { --card-gap: 16px; } }
@media (min-width: 1025px){ .featureTrack { --card-gap: 20px; } }
.featureTrack::-webkit-scrollbar { height: 8px; }
.featureTrack::-webkit-scrollbar-thumb { background: color-mix(in srgb, var(--border) 70%, transparent); border-radius: 8px; }

/* Prev/Next buttons (desktop) */
.carouselBtn {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 2;
  width: 40px; height: 40px;
  border-radius: 999px;
  border: 1px solid var(--border);
  background: var(--panel);
  color: var(--text);
  display: none; /* default hidden; enabled by breakpoints */
  align-items: center; justify-content: center;
  cursor: pointer;
  box-shadow: 0 6px 18px rgba(0,0,0,.08);
}
.carouselBtn:hover { box-shadow: 0 10px 24px rgba(0,0,0,.12); }
.carouselBtnLeft { left: -6px; }
.carouselBtnRight { right: -6px; }
@media (min-width: 901px){ .carouselBtn { display: inline-flex; } }
/* Show arrows on mobile too, slightly smaller and within padding */
@media (max-width: 640px){
  .carouselBtn{ display: inline-flex; width: 36px; height: 36px; }
  .carouselBtnLeft{ left: 6px; }
  .carouselBtnRight{ right: 6px; }
}

/* Animated gradient border on feature card (mask technique) */
@property --ring-angle { syntax: "<angle>"; initial-value: 0deg; inherits: false; }
.featureCard {
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: 16px;
  padding: 22px;
  aspect-ratio: 63 / 88; /* playing card ratio ~0.716 */
  transition: box-shadow .2s ease, transform .6s ease-out, opacity .6s ease-out, filter .6s ease-out, border-color .15s ease;
  position: relative;
  scroll-snap-align: center;
  scroll-snap-stop: always;
  flex: 0 0 auto;
  width: min(84vw, 280px); /* mobile default (smaller) */
  box-shadow: 0 10px 30px rgba(0,0,0,.18);
  will-change: transform;
  opacity: .65;
  transform: scale(.94);
}
@media (min-width: 641px) and (max-width: 1024px){
  .featureCard { width: clamp(300px, 32vw, 340px); }
}
@media (min-width: 1025px){
  .featureCard { width: clamp(320px, 28vw, 380px); }
}
.featureCard[data-active="true"]{ opacity: 1; transform: scale(1.04); filter: none; z-index: 2; }
.featureCard[data-prev="true"],
.featureCard[data-next="true"]{
  opacity: .8;
  transform: scale(.92);
}
/* Visually "stick" neighbors to the active card: cancel half the gap on the touching side */
.featureCard[data-prev="true"]{ margin-right: calc(-0.5 * var(--card-gap)); }
.featureCard[data-next="true"]{ margin-left:  calc(-0.5 * var(--card-gap)); }
.featureCard > * { position: relative; z-index: 2; }
.featureCard::before {
  content: ""; position: absolute; inset: 0; padding: var(--ring); border-radius: inherit;
  background: conic-gradient(
    from var(--ring-angle),
    color-mix(in srgb, var(--accent2) 70%, transparent) 0%,
    color-mix(in srgb, var(--accent2) 70%, transparent) 25%,
    color-mix(in srgb, var(--primary) 60%, white) 50%,
    color-mix(in srgb, var(--accent2) 70%, transparent) 75%,
    color-mix(in srgb, var(--accent2) 70%, transparent) 100%
  );
  -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
          mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  -webkit-mask-composite: xor; 
          mask-composite: exclude;
  pointer-events: none; z-index: 1; opacity: 0;
  animation: ring-spin var(--ring-speed) linear infinite paused; will-change: transform;
}
.featureCard:is(:hover, :focus-visible)::before { opacity: 1; animation-play-state: running; }
@keyframes ring-spin { to { --ring-angle: 360deg; } }

/* Fallback pentru feature-card */
@supports not (mask-composite: exclude) {
  .featureCard::before { inset: calc(-1 * var(--ring)); padding: 0; -webkit-mask: none; mask: none; z-index: 0; animation: ring-spin-fallback var(--ring-speed) linear infinite paused; }
  .featureCard:is(:hover, :focus-visible)::before { animation-play-state: running; }
  .featureCard::after { content: ""; position: absolute; inset: var(--ring); border-radius: inherit; background: var(--card); z-index: 1; pointer-events: none; }
  @keyframes ring-spin-fallback { to { transform: rotate(360deg); } }
}

.featureHead { display: flex; align-items: center; gap: 10px; margin: 0 0 8px; }
.featureIcon { width: 36px; height: 36px; object-fit: contain; opacity: .9; }
.featureCard h3 { margin: 0; font-size: 20px; line-height: 1.2; overflow-wrap: anywhere; word-break: break-word; hyphens: auto; }
.featureCard p { margin: 0; color: var(--muted); overflow-wrap: anywhere; word-break: break-word; hyphens: auto; }

/* Ensure mobile head layout overrides the base flex (defined above) */
@media (max-width: 640px){
  .featureViewport .featureHead{ display: grid; justify-items: center; align-items: start; gap: 6px; margin: 0 0 6px; }
  .featureViewport .featureIcon{ margin: 0 auto; }
  .featureViewport .featureCard h3{ text-align: center; }
}

/* Pricing */
.pricing { max-width: 1100px; margin: 80px auto; padding: 0 20px; }
.pricing h2 { font-size: clamp(28px, 5vw, 40px); margin: 0 0 24px; }
.pricingGrid { display: grid; grid-template-columns: repeat(3, minmax(0, 1fr)); gap: 20px; align-items: stretch; }
.priceCard { background: var(--panel); border: 1px solid var(--border); border-radius: 16px; padding: 24px; display: flex; flex-direction: column; gap: 16px; transition: box-shadow .15s ease, transform .15s ease, border-color .15s ease; }
.priceCard:hover {
  transform: translateY(-3px);
  /* Remove primary-tinted hover glow for benefit cards */
  box-shadow: none;
  border-color: var(--border);
}
.priceImg { width: 140px; height: auto; display: block; margin: auto auto 0; object-fit: contain; border: 0; }
.priceList { list-style: none; padding: 0; margin: 0; color: var(--text); display: grid; gap: 8px; }
/* Benefits list items with classic check icon */
.priceList li { display: grid; grid-template-columns: 18px 1fr; align-items: start; gap: 8px; }
.priceList li > svg { width: 18px; height: 18px; color: var(--primary); flex-shrink: 0; margin-top: 1px; }
.priceTier { margin-top: 10px; font-weight: 900; letter-spacing: .1em; opacity: .9; text-align: center; font-size: 22px; }

/* Footer (expanded) */
.footer { max-width: 1100px; margin: 60px auto; padding: 0 20px 60px; color: var(--muted); }
/* When landing content is shorter than viewport, keep footer anchored to bottom */
.footer { margin-top: auto; }
.footerGrid { display: grid; grid-template-columns: 1.2fr repeat(4, minmax(0, 1fr)); gap: 20px; align-items: start; border-top: 1px solid var(--border); padding-top: 28px; }
.footerCol { display: grid; gap: 10px; }
.footerBrand { display: inline-flex; align-items: center; gap: 10px; }
.footerCopy { margin: 0; color: var(--muted); }
.footerTitle { font-weight: 700; color: var(--text); opacity: .9; }
.footerList { list-style: none; margin: 0; padding: 0; display: grid; gap: 6px; }
.footerLink { color: var(--muted); text-decoration: none; font-weight: 400; }
.footerLink:hover { color: var(--text); }
.legalBar { border-top: 1px solid var(--border); margin-top: 28px; padding-top: 16px; color: var(--muted); display: grid; gap: 6px; }
.legalMeta { font-size: 12px; opacity: .9; }

/* About */
.about { max-width: 1100px; margin: 80px auto; padding: 0 20px; }
.about h2 { font-size: clamp(28px, 5vw, 40px); margin: 0 0 16px; }
.about p { color: var(--muted); margin: 0 0 12px; }

/* Contact */
.contact { max-width: 1100px; margin: 80px auto; padding: 0 20px; }
.contact h2 { font-size: clamp(28px, 5vw, 40px); margin: 0 0 16px; }
.contactCard { background: var(--panel); border: 1px solid var(--border); border-radius: 18px; padding: 16px; min-height: 160px; width: min(520px, 100%); display: grid; align-content: center; }
/* link verde de brand */
.contactCard a {
  color: var(--primary);
  text-decoration: underline;
  text-decoration-color: color-mix(in srgb, var(--primary) 40%, transparent);
  font-weight: 700;
}
.contactCard a:hover { font-weight: 400 ; text-decoration-color: var(--primary); }

/* Anchor offset for sticky header */
.features, .pricing, .about, .contact, .footer { scroll-margin-top: 90px; }

/* Responsive */
@media (max-width: 1100px) { .footerGrid { grid-template-columns: 1fr 1fr 1fr; } }
@media (max-width: 900px) {
  .hero { grid-template-columns: 1fr; }
  .pricingGrid { grid-template-columns: 1fr; }
  .menu { display: none; }
  .footerGrid { grid-template-columns: 1fr 1fr; }
  .menuToggle { display: inline-flex; background: transparent; color: var(--text); border: 1px solid var(--border); box-shadow: none; }
  /* Full-bleed slides on phones */
  .featureCard { width: calc(100vw - 40px); }
}
@media (max-width: 560px) { .footerGrid { grid-template-columns: 1fr; } }

/* Mobile-only stacks of footer columns under the short copy */
.footerStacksMobile { display: none; }
@media (max-width: 560px){
  .footerStacksMobile {
    display: grid;
    grid-template-columns: 1fr 1fr; /* two columns on phones */
    grid-auto-flow: column;         /* fill by column: two categories per column */
    gap: 18px;
    margin-top: 10px;
  }
  /* Hide the separate columns on mobile; we show the stacked copies instead */
  .footerGrid > .footerCol:not(:first-child) { display: none; }

  /* Wrap only long legal links on phones so they stay inside the card */
  .footerLink[href="/legal/privacy"],
  .footerLink[href="/legal/dpa"],
  .footerLink[href="/legal/cookies"] {
    white-space: normal;
    overflow-wrap: anywhere;
    word-break: break-word;
    hyphens: auto;
    display: inline-block;
  }
}

/* ✅ Logo sizing (nav & footer) */
.nav .brand img { height: 70px; width: auto; display: inline-block; }
.footer .footerBrand img { height: 22px; width: auto; display: inline-block; }

/* 🔧 Mobile tweak: ascunde “Plan4host” + mărește puțin logo-ul */
@media (max-width: 480px){
  .brand strong { display: none; }
  /* Keep logo within a square box on phones so height <= width */
  .nav .brand img {
    width: 60px;
    height: 60px;
    object-fit: contain;
    object-position: left center;
    display: inline-block;
  }
  /* Make header buttons a bit smaller for better balance with the logo */
  .nav .actions .btn { padding: 10px 14px; min-height: 40px; font-size: 14px; }
  .menuToggle { padding: 10px 14px; min-height: 40px; font-size: 14px; }
}

/* Responsive media: prevent lateral overflow (scoped) */
.landing :global(img),
.landing :global(video) { max-width: 100%; height: auto; }

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .btnText::before, .btnText::after { animation: none !important; opacity: 0 !important; }
  .featureCard::before { animation: none !important; }
}

/* Utility: force-wrap very long words/URLs */
.break-anywhere { overflow-wrap: anywhere; word-break: break-word; }

/* Visually-hidden helper */
.srOnly {
  position: absolute !important;
  width: 1px; height: 1px;
  padding: 0; margin: -1px; overflow: hidden;
  clip: rect(0, 0, 0, 0); white-space: nowrap; border: 0;
}

/* Cookie Policy — scoped table styles */
.cookieTable { overflow-x: auto; }

.cookieTable table {
  width: 100%;
  border-collapse: collapse;
  border: 1px solid var(--border);
}

.cookieTable th,
.cookieTable td {
  border-bottom: 1px solid var(--border);
  text-align: left;
  padding: 10px;
  color: var(--text);
}

.cookieTable thead th {
  background: color-mix(in srgb, var(--card) 60%, transparent);
  font-weight: 800;
}

@media (max-width: 560px) {
  .cookieTable th,
  .cookieTable td { padding: 8px; }
}

/* Phone: slightly smaller section titles */
@media (max-width: 560px) {
  .features h2,
  .pricing h2,
  .about h2,
  .contact h2 {
    font-size: clamp(19px, 6vw, 24px);
    line-height: 1.15;
  }
}

/* ascunde skip link-ul când rulează ca PWA instalată */
@media (display-mode: standalone), (display-mode: fullscreen) {
  .skipLink { display: none !important; }
}

/* fallback iOS vechi – dacă setăm data-standalone pe <html> */
html[data-standalone="true"] .skipLink { display: none !important; }


/* Doar în PWA (iOS/Android standalone) */
@media (display-mode: standalone) {
  .landing{
    background: #f8fafc;          /* culoarea landing-ului */
    min-height: 100svh;
  }



  /* Notch-top */
  .landing::before{
    content:"";
    position: fixed;
    top: 0; left: 0; right: 0;
    height: 14px;
    background: #f8fafc;
    z-index: 10900;               /* sub cookie modal (11000), peste conținut */
    pointer-events: none;
  }


  
  /* Home-indicator bottom */
  .landing::after{
    content:"";
    position: fixed;
    left: 0; right: 0; bottom: 0;
    height: var(--safe-bottom, env(safe-area-inset-bottom));
    background: #f8fafc;
    z-index: 10900;
    pointer-events: none;
  }

  /* Ca să nu „intre” footerul în zona acoperită */
  .footer{ padding-bottom: max(16px, var(--safe-bottom, env(safe-area-inset-bottom))); }
}
/* Ensure hamburger has no border even though it uses .btn base */
.menuToggle { border: none; background: transparent; }


/* Reusable glass + glow effect for cards */
/* Usage: add class to any card container, e.g. <div class="sb-card Sb-cardglow"> */
.Sb-cardglow, .sb-cardglow{
  /* Glass controls */
  --glass-blur: 10px;
  --glass-sat: 1.25;

  position: relative;
  border: 1px solid transparent; /* drawn by 3rd background layer */
  /* layered background: hotspot, inner glass gradient, gradient border */
  background:
    radial-gradient(140% 260% at 18% 0%, color-mix(in srgb, var(--bg) 20%, transparent), transparent 64%),
    linear-gradient(180deg,
      color-mix(in srgb, var(--card) 65%, transparent),
      color-mix(in srgb, var(--card) 35%, transparent)
    ),
    linear-gradient(180deg,
      color-mix(in srgb, var(--border) 55%, transparent),
      color-mix(in srgb, var(--border) 25%, transparent)
    );
  background-clip: padding-box, padding-box, border-box;
  -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-sat));
          backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-sat));
  /* inner highlight + subtle lift + crisp outline */
  box-shadow:
    /* glossy top edge */
    0 1px 0 color-mix(in srgb, #fff 22%, var(--card)) inset,
    /* bottom inner edge */
    0 -1px 0 color-mix(in srgb, var(--border) 52%, transparent) inset,
    /* soft inner ambient glow */
    0 2px 10px color-mix(in srgb, #fff 10%, transparent) inset,
    0 0 22px color-mix(in srgb, #fff 10%, transparent) inset,
    /* crisp inner outline */
    0 0 0 1px color-mix(in srgb, var(--border) 60%, transparent) inset,
    /* subtle external shadow */
    0 8px 22px color-mix(in srgb, var(--bg) 14%, transparent);
  transition: background-color .15s ease, box-shadow .15s ease, border-color .15s ease, backdrop-filter .2s ease;
}
.Sb-cardglow:hover, .Sb-cardglow:focus-within,
.sb-cardglow:hover, .sb-cardglow:focus-within{
  background:
    radial-gradient(140% 240% at 20% 0%, color-mix(in srgb, var(--bg) 26%, transparent), transparent 66%),
    linear-gradient(180deg,
      color-mix(in srgb, var(--card) 68%, transparent),
      color-mix(in srgb, var(--card) 32%, transparent)
    ),
    linear-gradient(180deg,
      color-mix(in srgb, var(--border) 60%, transparent),
      color-mix(in srgb, var(--border) 28%, transparent)
    );
  -webkit-backdrop-filter: blur(calc(var(--glass-blur) + 1px)) saturate(1.3);
          backdrop-filter: blur(calc(var(--glass-blur) + 1px)) saturate(1.3);
  box-shadow:
    0 1px 0 color-mix(in srgb, #fff 28%, var(--card)) inset,
    0 -1px 0 color-mix(in srgb, var(--border) 54%, transparent) inset,
    0 3px 12px color-mix(in srgb, #fff 12%, transparent) inset,
    0 0 26px color-mix(in srgb, #fff 12%, transparent) inset,
    0 0 0 1px color-mix(in srgb, var(--border) 65%, transparent) inset,
    0 10px 26px color-mix(in srgb, var(--bg) 16%, transparent);
}
